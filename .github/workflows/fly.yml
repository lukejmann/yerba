name: Deploy Fly

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths-ignore:
      - '!.github/workflows/fly.yml'
  workflow_dispatch:
    inputs:
      git-ref:
        description: 'Branch / ref / tag to build'
        required: false

        default: 'main'
      deployment-type:
        description: 'Fly app type to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      deployment-strat:
        description: 'Deploy strategy'
        required: true
        default: 'immediate'
        type: choice
        options:
          - rolling
          - immediate
          - bluegreen
          - canary
      builder:
        description: 'App builder type'
        required: true
        default: 'remote-only'
        type: choice
        options:
          - remote-only
          - local-only

env:
  GIT_REF: ${{ github.event.inputs.git-ref || github.ref }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_DEPLOY_STRAT: ${{ github.event.inputs.deployment-strat }}
  FLY_BUILDER_TYPE: ${{ github.event.inputs.builder }}
  FLY_APP: 'yerba-dev'
  FLY_CFG: 'fly.toml'
  FLY_TLS_CFG: 'fly.toml'
  FLY_DEPLOY_WAIT_SEC: '300'

jobs:
  deploy:
    name: Deploy to fly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          ref: ${{ env.GIT_REF }}
          fetch-depth: 0

      - name: Set env vars
        run: |
          echo "GIT_HEAD=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "FLY_TOML=${FLY_CFG}" >> $GITHUB_ENV
          echo "FLY_DEPLOY_STRAT=${FLY_DEPLOY_STRAT:-rolling}" >> $GITHUB_ENV
          echo "FLY_BUILDER_TYPE=${FLY_BUILDER_TYPE:-remote-only}" >> $GITHUB_ENV
        shell: bash
      # experimental: github.com/superfly/flyctl-actions/pull/20
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: latest

      - name: Deploy
        run: 'flyctl deploy
          --${{ env.FLY_BUILDER_TYPE }}
          --image-label ${{ env.GIT_HEAD }}
          --config ${{ env.FLY_TOML }}
          --strategy ${{ env.FLY_DEPLOY_STRAT }}
          --wait-timeout ${{ env.FLY_DEPLOY_WAIT_SEC }}
          --auto-confirm
          --no-cache
          --verbose
          '
      - name: Receipt
        if: success()
        run: |
          echo "::notice::Image @ registry.fly.io/${{ env.FLY_APP }}:${{ env.GIT_HEAD }}"
        shell: bash
